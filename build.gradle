buildscript {
   repositories {
      maven { url "https://plugins.gradle.org/m2/" }
      mavenLocal()
   }
   dependencies {
      classpath "us.ihmc:ihmc-build:0.14.0"
   }
}
plugins {
   id 'java-library-distribution'
}
apply plugin: "us.ihmc.ihmc-build"

ihmc {
   group = "us.ihmc"
   version = "0.12.5"
   vcsUrl = "https://github.com/ihmcrobotics/simulation-construction-set"
   openSource = true
   
   configureDependencyResolution()
   configurePublications()
}

mainDependencies {
   compile group: 'net.jafama', name: 'jafama', version: '2.1.0'
   compile group: 'org.jfree', name: 'jfreechart', version: '1.0.17'
   compile group: 'org.apache.xmlgraphics', name: 'batik-svggen', version: '1.7'
   compile group: 'org.apache.xmlgraphics', name: 'batik-dom', version: '1.7'
   compile group: 'net.sourceforge.jexcelapi', name: 'jxl', version: '2.6.12'
   compile group: 'com.github.wendykierp', name: 'JTransforms', version: '3.1'
   compile group: 'org.apache.commons', name: 'commons-math3', version: '3.3'
   compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'
   compile group: 'org.apache.pdfbox', name: 'pdfbox', version: '1.8.4'
   compile group: 'net.sourceforge.jmatio', name: 'jmatio', version: '1.0'
   compile group: 'org.ejml', name: 'core', version: '0.30'
   compile group: "junit", name: "junit", version: "4.12"
   compile group: 'xml-apis', name: 'xml-apis', version: '2.0.2'
   compile group: 'com.badlogicgames.gdx', name: 'gdx-bullet-platform', version: '1.9.4', classifier: 'natives-desktop'
   compile group: 'com.badlogicgames.gdx', name: 'gdx-bullet', version: '1.9.4'
   compile group: 'com.badlogicgames.gdx', name: 'gdx', version: '1.9.4'
   compile group: 'com.google.guava', name: 'guava', version: '18.0'
   compile group: 'org.easytesting', name: 'fest', version: '1.0.16'
   compile('org.easytesting:fest-swing:1.2.1')
         {
            exclude group: 'org.easytesting', module: 'fest'
         }
   compile group: 'us.ihmc.thirdparty.jinput', name: 'jinput', version: '160414'
   compile group: 'us.ihmc', name: 'ihmc-yovariables', version: '0.3.2'
   compile group: 'us.ihmc', name: 'IHMCVideoCodecs', version: '2.1.3'
   compile group: 'us.ihmc', name: 'euclid', version: '0.8.2'
   compile group: "us.ihmc", name: "ihmc-commons", version: "0.20.0"
   compile group: "us.ihmc", name: "ihmc-jmonkey-engine-toolkit", version: "0.12.1"
   compile group: "us.ihmc", name: "ihmc-robot-description", version: "0.12.1"
   compile group: "us.ihmc", name: "ihmc-graphics-description", version: "0.12.4"
   compile group: "us.ihmc", name: "ihmc-javafx-toolkit", version: "0.12.3"
   compile group: "us.ihmc", name: "ihmc-swing-plotting", version: "0.12.1"
   compile group: "us.ihmc", name: "ihmc-geometry", version: "0.12.2"
   compile ihmc.sourceSetProject("utilities")
}

testDependencies {
   compile group: "junit", name: "junit", version: "4.12"
   compile group: 'org.ejml', name: 'dense64', version: '0.30'
   compile("us.ihmc:ihmc-commons-testing:0.20.0")
         {
            exclude group: "us.ihmc", module: "ihmc-ci-core-api"
         }
}

utilitiesDependencies {
   compile group: 'us.ihmc', name: 'euclid-core', version: '0.5.1'
   compile group: 'us.ihmc', name: 'ihmc-yovariables', version: '0.3.2'
}

distributions {
   main {
      baseName = 'SimulationConstructionSet'
   }
}

def testProject = ihmc.sourceSetProject("test")

def void setJavaProperty(String propertyName, def value)
{
   def testProject = ihmc.sourceSetProject("test")
   println propertyName + ": " + value
   testProject.test.systemProperty propertyName, value
}

testProject.test {

      minHeapSize="4g"
      maxHeapSize="16g"

      doFirst {
         testLogging {
            if (logLevel == "verbose")
            {
               events "passed", "skipped", "failed", "standardOut", "standardError"
            } else
            {
               events "standardError"
            }

            exceptionFormat "full"
         }

         ignoreFailures true
//      forkEvery = 1

         println "Setting system properties."

         setJavaProperty("keep.scs.up", false)
         setJavaProperty("show.scs.windows", showGui)
         setJavaProperty("show.splash.screen", false)
         setJavaProperty("scs.dataBuffer.size", 2048)
         setJavaProperty("show.scs.yographics", showScsYoGraphics)
         setJavaProperty("java.awt.headless", !showGui)
         setJavaProperty("create.videos", createVideos)
         setJavaProperty("create.scs.videos", createVideos)
         setJavaProperty("create.scs.gui", showGui)
         setJavaProperty("openh264.license", "accept")
         setJavaProperty("runningOnCIServer", runningOnCIServer)
         setJavaProperty("disable.joint.subsystem.publisher", "true")

         if (createVideos == "true")
         {
            setJavaProperty("create.scs.gui", createVideos)
            setJavaProperty("create.videos.dir", videoDir)
         }

      }
   }

